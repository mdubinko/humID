#!/bin/bash
# 0. Make sure you have apg installed .. on Mac Homebrew you may need to first run brew tap jzaleski/homebrew-jzaleski
# TODO...and gnu parallel

# 1. Generate lots of random pronouncable words
apg -E 0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_.,\&\'\"\<\>\$\^\;\{\}\[\]\*\-\\\/\~\:\?\=\(\)\`\!\@\+\%]\|\# -m 2 -n 10000000 > 10Mwords.txt

# 2. Make this list over 1000x bigger by running bin/enhancelist.py over it

# 3. Remove duplicates (which requires sorting first)
split -l 333333333 input.txt
sort xaa -o xaa_sorted # etc
sort -m xaa_sorted xab_sorted xac_sorted ... -o combined_sorted
uniq combined_sorted > final.txt

# 4. Generate the main database by running bin/compute.py
split -l 1000000000 final.txt
python bin/compute.py xaa .. etc

#5
Each invocation will produce a file with a 6-character ID followed by a space and the word.
These files can be trimmed down in a search for the 'most readable' word.

# 6. Check whether the database has at least one entry for every possible value 0 - 2^24 - 1.

#7 Merge all the individual files into a master dictionary file with the One True identifier per
24-bit input
